import{d as b,p,a as w,_ as y,o as x,c as g,b as o,e as a,f as i}from"./index-9-5Njrdt.js";const S=b({name:"Canvas",props:["canvasId"],data:()=>({path:null,scope:new p.PaperScope,tool:w.tool,pathData:""}),methods:{reset(){this.scope.project.activeLayer.removeChildren()},pathCreate(e){return e.activate(),new p.Path({strokeColor:"#000000",strokeJoin:"round",strokeWidth:1.5})},createTool(e){return e.activate(),new p.Tool},mouseDown(){const e=this;this.tool=this.createTool(this.scope),this.tool.onMouseDown=t=>{e.path&&e.reset(),e.path=e.pathCreate(e.scope),e.path.add(t.point)},this.tool.onMouseDrag=t=>{e.path||(e.path=e.pathCreate(e.scope)),e.path.add(t.point)},this.tool.onMouseUp=t=>{var l;e.path||(e.path=e.pathCreate(e.scope)),e.path.simplify(10),console.log(e.path.exportSVG({asString:!0}));const r=e.path.exportSVG({asString:!0}).toString().split('d="')[1].split('"')[0];this.pathData=r,console.log(this.pathData.toString()),document.documentElement.style.setProperty("--pathData",`"${this.pathData}"`),(l=document.getElementById("path"))==null||l.setAttribute("d",this.pathData.toString())}},writeValue(e){const t=e.target,d=t.value,r=t.name;console.log(d,r);const l=document.getElementById("css-overrides"),f=document.getElementById("offset-anchor-x"),s=document.getElementById("offset-anchor-y"),n=document.getElementById("offset-distance"),c=document.getElementById("offset-pos"),u=document.getElementById("offset-rot-x"),v=document.getElementById("offset-rot-y");if(isNaN(Number(n.value))){const m=n.value.split("%")[0];n.value=m,isNaN(Number(m))&&(console.error("Please enter a valid number or a number with a percent sign at the end."),n.value="0")}if(!l)return;l.innerHTML=`
            #motion-demo {
                /* user-editable settings */
                offset-anchor: ${f.value} ${s.value};
                offset-distance: ${n.value}%;
                offset-position: ${c.value};
                offset-rotate: ${u.value} ${v.value};
            }
            `;const h=document.getElementById("code-window");h&&(h.innerHTML=`
            #motion-demo {<br />
            offset-path: "${this.pathData.toString()}";<br/>
            offset-anchor: ${f.value} ${s.value};<br />
            offset-distance: ${n.value}%;<br />
            offset-position: ${c.value};<br />
            offset-rotate: ${u.value} ${v.value};<br/>
            }
            `)}},mounted(){this.scope.setup("canvasId")}}),k={class:"flex flex-row m-8 space-x-32"},V={class:"control-section flex-1 flex flex-col space-y-4"},C={class:"flex flex-col space-y-2"},$={class:"flex flex-col space-y-2"},T={class:"flex flex-row space-x-4 w-full"},D={class:"flex flex-col space-y-2"},E={class:"flex flex-row space-x-4 w-full"},I={class:"flex flex-col space-y-2"},B={class:"flex flex-row space-x-4 w-full"},M={class:"flex flex-col space-y-2"},N={class:"flex flex-row space-x-4 w-full"},P={class:"demo-output flex-1 flex flex-col justify-start items-center space-y-16 mt-12"},j={class:"wrapper"},q={xmlns:"http://www.w3.org/2000/svg",style:{width:"100%",height:"100%"}};function A(e,t,d,r,l,f){return x(),g("div",k,[o("div",V,[t[15]||(t[15]=a('<div class="info-panel flex flex-col space-y-2"><div class="text-6xl font-medium">CSS Motion Path</div><div class="text-2xl font-semibold">About Motion Path</div><div class="text-sm font-light"> The CSS motion path module allows authors to animate any graphical object along a custom path. The idea is that when you want to animate an element moving along a path, you previously only had animating translation, position, etc. at your disposal, which wasn&#39;t ideal and only allowed for simple movements. With offset-path you can define a specific path of any shape you want. You then animate it along that path by animating offset-distance, and can choose to rotate it at any point using offset-rotate. </div></div><div class="text-xl font-semibold">Try Motion Path</div>',2)),o("div",C,[t[7]||(t[7]=o("div",{class:"text-xl font-medium"},"Draw the offset path",-1)),o("canvas",{id:"canvasId",class:"canvas-style",ref:"canvas",onMousedown:t[0]||(t[0]=(...s)=>e.mouseDown&&e.mouseDown(...s))},null,544)]),o("div",$,[t[10]||(t[10]=a('<div class="text-xl font-medium"><div class="flex flex-col space-y-1"><div class="flex flex-row space-x-4"><div>Set the offset anchor</div><div class="text-sm font-light">[k, k]</div><div class="tooltip cursor-help"><i class="fas fa-circle-question" title="(keywords): Valid inputs for either are `center`, `left`, `top`, `right`, `bottom`"></i></div></div></div><p class="text-sm font-light"> The offset-anchor CSS property specifies the point inside the box of an element traveling along an offset-path that is actually moving along the path. Try changing these values and see what happens. </p></div><div class="text-base font-light">offset-anchor</div>',2)),o("div",T,[o("select",{class:"text-black border border-black rounded-md px-2 py-1",id:"offset-anchor-x",onChange:t[1]||(t[1]=(...s)=>e.writeValue&&e.writeValue(...s))},t[8]||(t[8]=[a('<option value="center">center</option><option value="left">left</option><option value="top">top</option><option value="right">right</option><option value="bottom">bottom</option>',5)]),32),o("select",{class:"text-black border border-black rounded-md px-2 py-1",id:"offset-anchor-y",onChange:t[2]||(t[2]=(...s)=>e.writeValue&&e.writeValue(...s))},t[9]||(t[9]=[a('<option value="center">center</option><option value="left">left</option><option value="top">top</option><option value="right">right</option><option value="bottom">bottom</option>',5)]),32)])]),o("div",D,[t[11]||(t[11]=a('<div class="text-xl font-medium"><div class="flex flex-col space-y-1"><div class="flex flex-row space-x-4"><div>Set the offset distance</div><div class="text-sm font-light">[d]</div><div class="tooltip cursor-help"><i class="fas fa-circle-question" title="(decimal): Valid inputs are any decimal value or whole number"></i></div></div></div><p class="text-sm font-light"> The offset-distance CSS property specifies a position along an offset-path for an element to be placed. Try setting this value to <b class="font-bold">50</b> and see what happens. </p></div><div class="text-base font-light">offset-distance</div>',2)),o("div",E,[o("input",{type:"number",step:"0.01",class:"bg-transparent border w-full border-black rounded-md text-center",name:"offset-distance",id:"offset-distance",placeholder:"Set an offset-distance",value:"25",onChange:t[3]||(t[3]=(...s)=>e.writeValue&&e.writeValue(...s))},null,32)])]),o("div",I,[t[13]||(t[13]=a('<div class="text-xl font-medium"><div class="flex flex-col space-y-1"><div class="flex flex-row space-x-4"><div>Set the offset position</div><div class="text-sm font-light">[k]</div><div class="tooltip cursor-help"><i class="fas fa-circle-question" title="(keyword): Valid inputs are `auto`, `normal`, `center`, `left`, `top`, `right`, `bottom`"></i></div></div></div><p class="text-sm font-light"> The offset-position CSS property is what sets the initial position of the element along the offset path. This property is typically used in combination with the offset-path property to create a motion effect. </p></div><div class="text-base font-light">offset-position</div>',2)),o("div",B,[o("select",{class:"text-black border border-black rounded-md px-2 py-1 w-full text-center",id:"offset-pos",onChange:t[4]||(t[4]=(...s)=>e.writeValue&&e.writeValue(...s))},t[12]||(t[12]=[a('<option value="center">auto</option><option value="center">normal</option><option value="center">center</option><option value="left">left</option><option value="top">top</option><option value="right">right</option><option value="bottom">bottom</option>',7)]),32)])]),o("div",M,[t[14]||(t[14]=a('<div class="text-xl font-medium"><div class="flex flex-col space-y-1"><div class="flex flex-row space-x-4"><div>Set the offset rotation</div><div class="text-sm font-light">[x | k, y | k]</div><div class="tooltip cursor-help"><i class="fas fa-circle-question" title="(x-values or keywords): Valid inputs are `auto`, `&lt;angle&gt;`, `auto &lt;angle&gt;` or `reverse`"></i></div></div></div><p class="text-sm font-light"> The first value is the x-axis rotation and the second value is the y-axis rotation. What this does is set the rotation of the object traversing across the offet path. Try setting both values to <b class="font-bold">auto</b> and see what happens. </p></div><div class="text-base font-light">offset-rotate</div>',2)),o("div",N,[o("input",{type:"text",class:"bg-transparent border border-black rounded-md text-center w-full",name:"offset-rot-x",id:"offset-rot-x",placeholder:"Set a value of either 'auto' or <deg>deg",value:"auto",onInput:t[5]||(t[5]=(...s)=>e.writeValue&&e.writeValue(...s))},null,32),o("input",{type:"text",class:"bg-transparent border border-black rounded-md text-center w-full",name:"offset-rot-y",id:"offset-rot-y",placeholder:"Set a value of either 'auto' or <deg>deg",value:"60deg",onInput:t[6]||(t[6]=(...s)=>e.writeValue&&e.writeValue(...s))},null,32)])])]),o("div",P,[o("div",j,[t[17]||(t[17]=o("div",{class:"text-xl font-semibold m-4 text-gray-500 absolute top-0"},"Output window",-1)),t[18]||(t[18]=o("div",{id:"motion-demo"},null,-1)),(x(),g("svg",q,t[16]||(t[16]=[o("path",{id:"path",class:"path",d:"M180,110 C180,220 320,220 320,110",fill:"none",stroke:"#5e5e7d","stroke-width":"3","stroke-miterlimit":"10"},null,-1)])))]),t[19]||(t[19]=o("div",{class:"generated-code block w-full py-4"},[o("div",{class:"text-xl font-semibold"},"Generated code"),o("div",{class:"code-window text-white bg-gray-800 py-6 px-4 w-full h-full my-4 rounded-lg",id:"code-window"},[i(" #motion-demo {"),o("br"),i(" /* user-editable settings */"),o("br"),i(" offset-anchor: center center;"),o("br"),i(" offset-distance: 25%;"),o("br"),i(" offset-position: auto;"),o("br"),i(" offset-rotate: auto 60deg;"),o("br"),i(" } ")])],-1))])])}const L=y(S,[["render",A]]);export{L as default};
